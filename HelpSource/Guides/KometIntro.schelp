TITLE:: Introduction to Komet
SUMMARY:: How to use Komet
CATEGORIES::Komet>Guides

SECTION::Terminology
A strong::synth:: (found in the  EMPHASIS::synth:: subfolder) is a sound source without panning, filtering and vca envelopes. This could for example be a definition of an oscillator function and nothing else.

A strong::component:: (found in the  EMPHASIS::components:: subfolder) is a building block used for constructing the final synth def using the synth function and these components. Components include envelopes, filters, grain shapes etc.

SECTION:: Setting up

SECTION:: Spawning a synth

SECTION:: Using Komet events

SECTION:: Using effects

SUBSECTION:: Main effect chains

SECTION:: Adding synths

SECTION::Panning/spatialization

Panning methods are automatically chosen and built into the synths that are constructed by the library when you initialize it. Each algorithm comes with an auto panning algorithm as well (for 3D panners/encoders this number is two: One for azimuth and one for elevation).

SUBSECTION:: Auto panner

To be able to easily animate a panning using simple modulation, all of the panning algorithms come with a simple auto panning algorithm baked in. This is handled by the class LINK::Classes/KAutoPan:: which is a small pseudo ugen.

SUBSECTION:: Panning resolution

The number of channels you choose when you build the library has an effect on the choice of panning algorithm chosen for the sources. In conjunction with the number of channels output by the synth function, a number of different panning algorithms are selected by the systeKometSynthFactory. All of this happens internally in the CODE::KPanners.choosePanAlgo:: method.

In the table below, you will see the matrix of choices made by the system when faced with the values for the number of outputs of the system and the number of outputs of the source synth function (confusingly named numChannelsIn):

TABLE::
	## strong::numChannelsOut (of system):: || strong::numChannelsIn (from synth func):: || strong::panning algorithm:: || strong::class/method:: || strong::output::
	## 1 || 1 || code::\mono2mono:: || none (pass through) || mono
	## 1 || 2 || code::\stereo2mono:: || .sum || mono
	## 2 || 1 || code::\mono2stereo:: || LINK::Classes/Pan2:: || stereo
	## 2 || 2 || code::\stereo2stereo:: || LINK::Classes/Balance2:: || stereo
	## >2 || 1 || code::\mono2azimuth:: || LINK::Classes/PanAz:: || multichannel azimuth
	## >2 || >1 || code::\multi2azimuth:: || LINK::Classes/SplayAz:: || multichannel azimuth
	## \O1 || 1 || code::\mono2hoaO1:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O2 || 1 || code::\mono2hoaO2:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O3 || 1 || code::\mono2hoaO3:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O4 || 1 || code::\mono2hoaO4:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O5 || 1 || code::\mono2hoaO5:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O6 || 1 || code::\mono2hoaO6:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O7 || 1 || code::\mono2hoaO7:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O1 || 2 || code::\stereo2hoaO1:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O2 || 2 || code::\stereo2hoaO2:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O3 || 2 || code::\stereo2hoaO3:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O4 || 2 || code::\stereo2hoaO4:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O5 || 2 || code::\stereo2hoaO5:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O6 || 2 || code::\stereo2hoaO6:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
	## \O7 || 2 || code::\stereo2hoaO7:: || LINK::Classes/HoaEncodeDirection:: || LINK::Classes/AtkHoa::
::
